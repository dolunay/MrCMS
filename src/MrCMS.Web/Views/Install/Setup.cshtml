@using Microsoft.Extensions.Options
@using MrCMS.Installation.Models
@using MrCMS.Settings
@model InstallModel
@inject IOptions<SystemConfig> Config
@{
    ViewBag.Title = "Install MrCMS";
    var installationResult = TempData.Get<InstallationResult>();
    var providerTypes = ViewData["provider-types"] as List<DatabaseProviderInfo> ?? new List<DatabaseProviderInfo>();

    var cultures = Config.Value.SupportedCultures.ToList()
        .OrderBy(info => info)
        .BuildSelectItemList(info => info, info => info,null,
            emptyItem: null);
}


<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Mr CMS installation</title>
    <link href="/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/style.css" type="text/css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <img src="/Images/logo.png" class="pt-3" /> <br /><p class="pt-3">
                    To complete this wizard you must know some information regarding your database server
                    ("connection string"). Please contact your ISP if necessary. If you're installing
                    on a local machine or server you might need information from your System Admin.
                </p>
            </div>
        </div>
        <br />
        @using (Html.BeginForm("Setup", "Install", FormMethod.Post, new { id = "installationform" }))
        {
            @Html.AntiForgeryToken()
            if (installationResult != null)
            {
                if (installationResult.Errors.Any())
                {
                    <div class="alert alert-danger">
                        <strong>Sorry there was a problem installing - please see errors below</strong>
                        <ul>
                            @{
                                foreach (var error in installationResult.Errors)
                                {
                                    <li>@error</li>
                                }
                            }
                        </ul>
                    </div>
                }
            }
            <div class="row">
                <div class="col-lg-6">
                    <fieldset>
                        <h4>Site Information</h4>
                        <hr class="small-margin" />

                        <div class="form-group">
                            @Html.LabelFor(x => x.SiteName)
                            @Html.TextBoxFor(x => x.SiteName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.SiteName)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.SiteUrl)
                            @Html.TextBoxFor(x => x.SiteUrl, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.SiteUrl)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.AdminEmail)
                            @Html.TextBoxFor(x => x.AdminEmail, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.AdminEmail)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.AdminPassword)
                            @Html.PasswordFor(x => x.AdminPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.AdminPassword)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.ConfirmPassword)
                            @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.UiCulture)
                            @Html.DropDownListFor(x => x.UiCulture, cultures, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.UiCulture)
                        </div>

                    </fieldset>
                </div>
                <div class="col-lg-6">
                    <fieldset>
                        <h4>Database information</h4>
                        <hr class="small-margin" />

                        @foreach (var providerType in providerTypes)
                        {
                            <div class="form-group">
                                <label class="radio-inline">
                                    @Html.RadioButton("DatabaseProvider", providerType.TypeName, (Model.DatabaseProvider == providerType.TypeName), new { data_connection_string_required = providerType.RequiresConnectionStringBuilding })
                                    @providerType.Description
                                </label>
                            </div>
                        }
                        <hr />

                        <div id="sqlConnectionInfo">

                            <div class="form-check mb-3">
                                <label class="checkbox-inline">
                                    @Html.CheckBoxFor(x => x.SqlServerCreateDatabase)
                                    Create database if it doesn't exist
                                </label>
                            </div>

                            <div class="form-group">
                                <label class="radio-inline">
                                    @Html.RadioButton("SqlConnectionInfo", SqlConnectionInfo.Values, (Model.SqlConnectionInfo == SqlConnectionInfo.Values), new { id = "sqlconnectioninfo_values" })
                                    Enter SQL connection values
                                </label>
                            </div>
                            <div class="form-group">
                                <label class="radio-inline">
                                    @Html.RadioButton("SqlConnectionInfo", SqlConnectionInfo.Raw, (Model.SqlConnectionInfo == SqlConnectionInfo.Raw), new { id = "sqlconnectioninfo_raw" })
                                    Enter raw connection string (advanced)
                                </label>
                            </div>

                            <div id="sqlDatabaseInfo">

                                <div class="form-group">
                                    @Html.LabelFor(x => x.SqlServerName)
                                    @Html.TextBoxFor(x => x.SqlServerName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.SqlServerName)
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(x => x.SqlDatabaseName)
                                    @Html.TextBoxFor(x => x.SqlDatabaseName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.SqlDatabaseName)
                                </div>

                                <div class="form-group">
                                    <label class="radio-inline">
                                        @Html.RadioButton("SqlAuthenticationType", SqlAuthenticationType.SQL, (Model.SqlAuthenticationType == SqlAuthenticationType.SQL), new { id = "sqlauthenticationtype_sql" })
                                        Use SQL Server account
                                    </label>
                                </div>

                                <div class="form-group">
                                    <label class="radio-inline">
                                        @Html.RadioButton("SqlAuthenticationType", SqlAuthenticationType.Windows, (Model.SqlAuthenticationType == SqlAuthenticationType.Windows), new { id = "sqlauthenticationtype_windows" })
                                        Use integrated Windows authentication
                                    </label>
                                </div>

                                <div class="form-group" id="pnlSqlServerUsername">
                                    @Html.LabelFor(x => x.SqlServerUsername)
                                    @Html.TextBoxFor(x => x.SqlServerUsername, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.SqlServerUsername)
                                </div>

                                <div class="form-group" id="pnlSqlServerPassword">
                                    @Html.LabelFor(x => x.SqlServerPassword)
                                    @Html.PasswordFor(x => x.SqlServerPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.SqlServerPassword)
                                </div>

                            </div>
                            <div id="sqlDatabaseConnectionString">
                                <div class="form-group" id="pnlSqlServerUsername">
                                    @Html.LabelFor(x => x.DatabaseConnectionString)
                                    @Html.TextBoxFor(x => x.DatabaseConnectionString, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(x => x.DatabaseConnectionString)
                                </div>
                                <span class="hint">
                                    Example:<br />
                                    Data Source=sqlServerName;Initial Catalog=dbName;Persist Security Info=True;User
                                    ID=userName;Password=password
                                    <br />
                                    Find more info <a href="http://www.connectionstrings.com/" target="_blank">here</a>
                                </span>
                            </div>
                        </div>

                    </fieldset>
                </div>
            </div>
            <hr />

            <div class="text-right">
                <input type="submit" value="Install" class="btn btn-lg btn-primary" />
            </div>

        }

        <footer>
            <hr />
            <p class="d-inline">
                &copy; Mr CMS 2012-@DateTime.Now.Year - v@(Html.AssemblyVersion()) 
                <span class="pull-right" style="margin-right: 20px;">Logged in from @Context.Request.GetCurrentIP()</span>
            </p>
        </footer>

        <div id="throbber">
            <div class="curtain">
            </div>
            <div class="curtain-content">
                <div>
                    <h1 id="setUpHeader">Installing Mr CMS...</h1>
                    <p>
                        <img src="/images/install-synchronizing.gif" alt="" />
                    </p>
                </div>
            </div>
        </div>
    </div>
    <script src="/scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
    <script src="/scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="/scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script src="/scripts/install.js" type="text/javascript"></script>
</body>
</html>

