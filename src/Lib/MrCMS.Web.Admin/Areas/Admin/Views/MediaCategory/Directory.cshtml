@using System.Drawing
@using MrCMS.Web.Admin.Helpers
@using MrCMS.Web.Admin.Services
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@model MrCMS.Web.Admin.Models.MediaCategorySearchModel
@inject IFileAdminService FileAdminService
@{
    var files = await FileAdminService.GetFilesForFolder(Model);
    var folders = await FileAdminService.GetSubFolders(Model);
}
<div data-update-media-folder="@Url.Action("Directory", "MediaCategory", Model)">
    <div id="folder-container">

        @if (folders.Any())
        {
            foreach (var folder in folders.OrderBy(x => x.DisplayOrder))
            {
                <div class="folder" data-id="folder-@folder.Id" data-url="@Url.Action("Show", "MediaCategory", new { id = folder.Id })" title="@folder.Name">
                    <i class="fa fa-folder-open">&nbsp;</i> @folder.Name.TruncateString(28)
                </div>
            }
            <div class="clearfix"></div>
        }
        <div id="file-list" data-file-list="true" data-category-id="@Model?.Id">
            @if (files != null && files.Any())
            {
                foreach (var file in files)
                {
                    <div class="file" data-id="file-@file.Id" data-type="file" data-url="@Url.Action("Edit", "File", new { Id = file.Id })">
                        <div class="d-flex flex-column h-100">
                            <div class="col px-0 d-flex align-items-center justify-content-center">
                                <a title="@file.FileName" href="" class="file-preview">
                                    @if (file.IsImage() || file.IsVectorImage())
                                    {
                                        @await Html.RenderImage(file.FileUrl, new Size(100, 100), attributes: new { @class = "img-fluid" })
                                    }
                                    else
                                    {
                                        <i class="@file.FileExtension.GetIconClass()"> </i>
                                    }
                                </a>
                            </div>
                            <div class="col-auto px-0">
                                <div class="file-link text-center">
                                    @Html.Link(file.FileName, file.FileUrl)
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="clearfix"> </div>
                @Html.PagedListPager(files, page => Url.Action("Index", "MediaCategory", new { page, Model.SearchText, Model.SortBy, Model.Id }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
            }
            else
            {
                @Html.InfoBlock("", await Html.PlainResource("Admin Media No Files Message", "There are no files here yet - why not upload some?"))
            }
        </div>
        <div class="clearfix"> </div>

    </div>
</div>